{"version":3,"sources":["components/Login.js","components/Chatroom.js","components/MenuBar.js","App.js","reportWebVitals.js","index.js"],"names":["Login","sendDetails","useState","roomID","setRoomID","username","setUsername","history","useHistory","Grid","container","spacing","direction","alignItems","justify","style","minHeight","item","xs","Paper","elevation","minWidth","autoComplete","Box","p","pt","FormControl","InputLabel","htmlFor","Input","required","id","value","onChange","e","target","console","log","Button","variant","color","onClick","push","endpoint","Chatroom","loginDetails","text","setText","messageList","setMessageList","handleSubmit","preventDefault","toAdd","axios","post","useEffect","socket","socketIOClient","on","data","get","params","then","response","disconnect","pb","onSubmit","List","width","overflow","maxHeight","slice","reverse","map","message","ListItem","Card","CardContent","Typography","gutterBottom","component","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","title","MenuBar","classes","className","AppBar","position","Toolbar","App","setLoginDetails","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc610807.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button';\r\nimport { Box } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction Login({sendDetails}){\r\n\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const[username, setUsername] = useState(\"\");\r\n  const history = useHistory();\r\n  function handleSubmit(e) {\r\n    console.log(\"Form Submitted!\")\r\n    console.log(username);\r\n    console.log(roomID);\r\n    sendDetails([username, roomID]);\r\n    history.push(\"/chatroom\")\r\n  }\r\n  function roomIDChanged(e){\r\n    setRoomID(e.target.value);\r\n    console.log(\"ID Changed\");\r\n  }\r\n  function usernameChanged(e){\r\n    setUsername(e.target.value);\r\n    console.log(\"Username Changed\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Grid container spacing = {0} direction = \"column\" alignItems = \"center\" justify = \"center\" style = {{minHeight: '80vh'}}>\r\n        <Grid item xs = {3}>\r\n          <Paper elevation = {3} style = {{minWidth: '50vh'}}>\r\n            \r\n            <form autoComplete=\"off\">\r\n              <Box p= {2} pt= {3}>\r\n                <FormControl>\r\n                  <InputLabel htmlFor=\"username-input\">Username</InputLabel>\r\n                  <Input required id = \"username-input\" value = {username} onChange = {usernameChanged} />\r\n                </FormControl>\r\n              </Box>\r\n              <Box p = {2} pt = {1}>\r\n                <FormControl>\r\n                  <InputLabel htmlFor=\"roomID-input\">Room ID</InputLabel>\r\n                  <Input required id = \"roomID-input\"  value = {roomID} onChange = {roomIDChanged} />\r\n                </FormControl>\r\n              </Box>\r\n            </form>\r\n            <Box p = {2}>\r\n              <Button variant=\"contained\" color=\"primary\" onClick = {handleSubmit}>\r\n                Join\r\n              </Button>\r\n            </Box>\r\n\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","//All import statements\r\nimport React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {Button, InputLabel, Input, FormControl, ListItem, List, Box, Grid, Paper, Typography, CardContent, Card} from '@material-ui/core'\r\n\r\nconst endpoint = \"https://expresschatserver.herokuapp.com/\"\r\n//Functional React Component, inheriting the loginDetails \r\nfunction Chatroom({loginDetails}){\r\n\r\n    //Text state hook, in order to store the message entry \r\n    const [text, setText] = useState(\"\");\r\n\r\n    //State hook to store all messages in the room\r\n    const [messageList, setMessageList] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    //Called everytime component loads and relaods\r\n    useEffect(()=> {\r\n\r\n        console.log(loginDetails)\r\n        if(loginDetails[0] === \"\"){\r\n            console.log(\"There are no login details\")\r\n            history.push(\"/chat\")\r\n        }\r\n        //Connect\r\n        const socket = socketIOClient(endpoint);\r\n\r\n        //Whenever we get that message\r\n        socket.on(\"Update\", data => {\r\n\r\n            //Pull The data and set to messagelist\r\n            axios.get(endpoint + \"messagelist\", {params: {roomID: loginDetails[1]}}).then(response => {\r\n                setMessageList(response.data)\r\n            });\r\n        });\r\n\r\n        return () => socket.disconnect();\r\n    }, [])\r\n\r\n    //Text Value Changed\r\n    function textChanged(e) {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    //When submitted\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        console.log(\"text submitted, \" + text)\r\n        const toAdd = \r\n        {\r\n            username: loginDetails[0],\r\n            text: text,\r\n            roomID: loginDetails[1]\r\n        }\r\n        axios.post(endpoint + \"messages\", toAdd)\r\n\r\n        setText(\"\");\r\n    }\r\n\r\n    //Render\r\n    return(\r\n        <div>\r\n            <Grid container>\r\n                <Grid item xs = {6}>\r\n                    <Grid container spacing = {0} direction = \"column\" alignItems = \"center\" justify = \"center\" style = {{minHeight: '80vh'}}>\r\n                        <Grid item xs = {6}>\r\n                            <Paper elevation = {3}>\r\n                                <Box p = {3} pb = {0}>\r\n                                    <form autoComplete = \"off\" onSubmit = {handleSubmit}>\r\n                                        <FormControl>\r\n                                            <InputLabel htmlFor = \"text-input\">Send a Message!</InputLabel>\r\n                                            <Input id = \"text-input\" value = {text} onChange = {textChanged} />\r\n                                        </FormControl>\r\n                                    </form>\r\n                                </Box>\r\n                                <Box p = {3}>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick = {handleSubmit}>\r\n                                        Send\r\n                                    </Button>\r\n                                </Box>\r\n                                              \r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid item xs = {6}>\r\n                    <List style = {{width: '100%', overflow: 'auto', maxHeight: 500}}>\r\n                        {messageList.slice(0).reverse().map(message => {\r\n                            return (\r\n                                <ListItem key= {message.id} style = {{width: \"100%\"}}>\r\n                                    <Box p = {0.5} style = {{width: \"100%\"}}>\r\n                                        <Card>\r\n                                            <CardContent>\r\n                                                <Typography color=\"textSecondary\" gutterBottom>\r\n                                                    {message.username}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body2\" component=\"p\">\r\n                                                    {message.text}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Box>\r\n\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </List>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Chatroom;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction MenuBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Chat App\r\n          </Typography>\r\n          <Button color=\"inherit\">Developed and Maintained by Hari Shankar</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\nexport default MenuBar;","\n//All Import Statements\nimport './App.css';\nimport React, { useState } from 'react';\nimport Login from \"./components/Login.js\";\nimport Chatroom from \"./components/Chatroom.js\"\nimport MenuBar from \"./components/MenuBar.js\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n//Create a functional React Componenet\nfunction App() {\n  //Create a hook for the login details, to be passed to chatroom.js\n  const [loginDetails, setLoginDetails] = useState([\"\", \"\"])\n\n  //Function for login.js to use to pass over the login Details\n  const sendDetails = (data) => {\n    setLoginDetails(data);\n  }\n  \n  //Render\n  return (\n    <div className=\"App\">\n      <MenuBar />\n      <Router>\n        <Switch>\n          <Route path = \"/chat\" exact component = {() => <Login sendDetails = {sendDetails} />} />\n          <Route path = \"/chatroom\" exact component = {() => <Chatroom loginDetails = {loginDetails}/>} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}